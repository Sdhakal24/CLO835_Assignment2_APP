# CI/CD pipeline
name: Build and Push the MySQL and Flask App Image to AWS ECR

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build the docker image
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Configure AWS Credential
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      # Step 3: Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Step 4: Build and Push mysql and app Image
      - name: Build and Push Images to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          MYSQL_ECR_REPOSITORY: sql
          APP_ECR_REPOSITORY: flaskapp
          IMAGE_TAG: latest
        run: |
          cd app/
          # Build the Docker images
          docker build -t $ECR_REGISTRY/$MYSQL_ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile_mysql .
          docker build -t $ECR_REGISTRY/$APP_ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile .
      
          # Push images to ECR
          docker push $ECR_REGISTRY/$MYSQL_ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$APP_ECR_REPOSITORY:$IMAGE_TAG
